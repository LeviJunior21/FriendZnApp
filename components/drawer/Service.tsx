import { Dispatch, SetStateAction } from "react";
import { keyUser, uri_principal } from "../../data/constants";
import { LoginCadastroReturns } from "../usuario/cadastro/Interface";
import AsyncStorage from "@react-native-async-storage/async-storage";

const bandeiras = ["üáßüá∑", "üá®üá¶", "üá∫üá∏", "üá¶üá∑", "üá∫üáæ", "üá≤üáΩ", "üáªüá™", "üáØüá≤"].map(emoji => ({ emoji: emoji}));
const animais = ["üê∂", "üê¢", "ü¶ñ", "ü¶ï", "ü¶Ä", "üê¨", "ü¶≠"].map(emoji => ({ emoji: emoji}));
const expressoes = ["üòä", "üòÇ", "üòç", "üòé", "ü§î", "üòú", "üò¢", "üòá"].map(emoji => ({ emoji: emoji}));
const comida = ["üçï", "üçî", "üçü", "üç¶", "üç©", "üçì", "ü•ë", "üçé"].map(emoji => ({ emoji }));
const transporte = ["üöó", "üöï", "üö≤", "üöÑ", "üö¢", "üöÅ", "üöÄ", "üõ¥"].map(emoji => ({ emoji }));
const clima = ["‚òÄÔ∏è", "‚òÅÔ∏è", "‚õàÔ∏è", "‚ùÑÔ∏è", "üå™Ô∏è", "üåà", "üåä", "üåô"].map(emoji => ({ emoji }));
const esportes = ["‚öΩ", "üèÄ", "üéæ", "üèà", "üèê", "üèì", "üéø", "‚õ≥"].map(emoji => ({ emoji }));
const entretenimento = ["üé¨", "üé§", "üé®", "üé≤", "üéÆ", "üéª", "üé≠", "üì∫"].map(emoji => ({ emoji }));
const sorte = ["üçÄ", "üêû", "üåà", "üéê", "üéã", "üå†", "üåü", "üîÆ"].map(emoji => ({ emoji }));
const tecnologia = ["üíª", "üì±", "‚åö", "üñ±Ô∏è", "üïπÔ∏è", "üîç", "üì°", "üîå"].map(emoji => ({ emoji }));
const saude = ["üíä", "ü©π", "üå±", "üçè", "üèãÔ∏è‚Äç‚ôÄÔ∏è", "üö¥‚Äç‚ôÇÔ∏è", "üßò‚Äç‚ôÇÔ∏è", "üí§"].map(emoji => ({ emoji }));

export const emojis = [
    { titulo: "Bandeiras paises", emojis: bandeiras }, 
    { titulo: "Animais", emojis: animais }, 
    { titulo: "Express√µes", emojis: expressoes },
    { titulo: "Comidas", emojis: comida },
    { titulo: "Transporte", emojis: transporte }, 
    { titulo: "Clima", emojis: clima }, 
    { titulo: "Esportes", emojis: esportes },
    { titulo: "Entretenimento", emojis: entretenimento },
    { titulo: "Sorte", emojis: sorte }, 
    { titulo: "Tecnologia", emojis: tecnologia }, 
    { titulo: "Sa√∫de", emojis: saude },

]

export const alterarEmoji = async (indexArray: number, indexEmoji: number, setAberto: Dispatch<SetStateAction<boolean>>, meusDados: LoginCadastroReturns, setMeusDados: Dispatch<SetStateAction<LoginCadastroReturns>>): Promise<void> => {
    let emoji: string = "";

    if (meusDados.id !== -1 && meusDados.codigoAcesso !== -1) {
        if (indexArray !== -1 && indexEmoji !== -1) {
            emoji = emojis[indexArray].emojis[indexEmoji].emoji;
        }

        const dados = {
            emoji: emoji,
            codigoAcesso: meusDados.codigoAcesso
        };
        
        const url: string = uri_principal + `/v1/usuarios/usuario/${meusDados.id}/emoji`;

        const response = await fetch(url, {
            method: "PATCH",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(dados)
        });

        if (response.ok) {
            await gravarEmoji(emoji, setAberto, meusDados, setMeusDados);
        }
    }
}

const gravarEmoji = async (emoji: string, setAberto: Dispatch<SetStateAction<boolean>>, meusDados: LoginCadastroReturns, setMeusDados: Dispatch<SetStateAction<LoginCadastroReturns>>): Promise<void> => {
    meusDados.emoji = emoji;
    const dadosAsync = await AsyncStorage.getItem(keyUser);
    if (dadosAsync !== null) {
        const dadosUser = JSON.parse(dadosAsync);
        dadosUser.emoji = emoji;
        await AsyncStorage.setItem(keyUser, JSON.stringify(dadosUser));
        setMeusDados(meusDados)
    }
    setAberto(false);
}
