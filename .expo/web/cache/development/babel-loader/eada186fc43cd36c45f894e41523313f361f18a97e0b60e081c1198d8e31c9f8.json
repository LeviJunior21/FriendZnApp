{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport styled from \"styled-components/native\";\nimport { getCurrentDate } from \"../../utils/time\";\nimport { getUsuario } from \"../../utils/getUsuario\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { buscarChat } from \"../../data/utils\";\nimport { Provider } from \"../../utils/Provider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatI(props) {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    usuario = _useState2[0],\n    setUsuario = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ultimaConversa = _useState4[0],\n    setUltimaConversa = _useState4[1];\n  var _useContext = useContext(Provider),\n    chatData = _useContext.chatData;\n  useEffect(function () {\n    var carregandoUsuario = function () {\n      var _ref = _asyncToGenerator(function* (usuarioID) {\n        var loadUsuario = yield getUsuario(usuarioID);\n        setUsuario(loadUsuario);\n      });\n      return function carregandoUsuario(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    carregandoUsuario(props.chat.getRemetente());\n  }, []);\n  useEffect(function () {\n    buscarConversa();\n  }, [chatData]);\n  var buscarConversa = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var chat = yield buscarChat(props.chat.getRemetente(), \"myKey\");\n      console.log(chat.getConversas());\n      setUltimaConversa(chat.getConversas()[chat.getConversas().length - 1].getMensagem());\n    });\n    return function buscarConversa() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Container, {\n    onPress: function onPress() {\n      return props.navigation.navigation.navigate(\"ChatScreen\", {\n        chat: props.chat,\n        nome: usuario == null ? void 0 : usuario.getApelido()\n      });\n    },\n    children: [_jsx(AvatarContainer, {\n      children: _jsx(Avatar, {})\n    }), _jsxs(UserOutros, {\n      children: [_jsxs(NameHourContainer, {\n        children: [_jsxs(Nome, {\n          children: [\"@\", usuario == null ? void 0 : usuario.getApelido()]\n        }), _jsx(Hora, {\n          children: getCurrentDate(props.chat.getTimestamp())\n        })]\n      }), _jsx(Mensagem, {\n        numberOfLines: 1,\n        children: ultimaConversa\n      })]\n    })]\n  });\n}\nvar Container = styled.TouchableOpacity`\n    width: 100%;\n    height: 80px;\n    border-bottom-width: 1px;\n    border-bottom-color: white;\n    flex-direction: row;\n    padding-vertical: 10px;\n    padding-left: 5px;\n`;\nvar AvatarContainer = styled.View`\n    width: 70px;\n    height: 70px;\n`;\nvar UserOutros = styled.View`\n    flex: 1;\n`;\nvar NameHourContainer = styled.View`\n    width: 100%;\n    height: 34px;\n    flex-direction: row;\n    align-itens: center;\n    justify-content: space-between;\n    padding-horizontal: 4px;\n`;\nvar Nome = styled.Text`\n    color: white;\n    font-size: 14px;\n    font-weight: 500;\n`;\nvar Hora = styled.Text`\n    color: white;\n    font-size: 11px;\n    font-weight: 500;\n`;\nvar Mensagem = styled.Text`\n    padding-horizontal: 6px;\n    color: white;\n`;\nvar Avatar = styled.View`\n    width: 60px;\n    height: 60px;\n    border-radius: 30px;\n    background-color: white;\n`;","map":{"version":3,"names":["styled","getCurrentDate","getUsuario","useContext","useEffect","useState","buscarChat","Provider","jsx","_jsx","jsxs","_jsxs","ChatI","props","_useState","_useState2","_slicedToArray","usuario","setUsuario","_useState3","_useState4","ultimaConversa","setUltimaConversa","_useContext","chatData","carregandoUsuario","_ref","_asyncToGenerator","usuarioID","loadUsuario","_x","apply","arguments","chat","getRemetente","buscarConversa","_ref2","console","log","getConversas","length","getMensagem","Container","onPress","navigation","navigate","nome","getApelido","children","AvatarContainer","Avatar","UserOutros","NameHourContainer","Nome","Hora","getTimestamp","Mensagem","numberOfLines","TouchableOpacity","View","Text"],"sources":["/home/marcos_anderson/MeusProjetos/FriedZone/friendzoneapp/components/chat/chatI.tsx"],"sourcesContent":["import styled from \"styled-components/native\";\nimport { Chat } from \"../../model/Chat\";\nimport { getCurrentDate } from \"../../utils/time\";\nimport { Navigation } from \"../../utils/interfaces\";\nimport { getUsuario } from \"../../utils/getUsuario\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Usuario } from \"../../model/Usuario\";\nimport { buscarChat } from \"../../data/utils\";\nimport { Conversa } from \"../../model/Conversa\";\nimport { ContextProvider, Provider } from \"../../utils/Provider\";\n\ninterface Props{\n    chat: Chat;\n    navigation: Navigation;\n}\n\nexport default function ChatI(props: Props) {\n    const [usuario, setUsuario] = useState<Usuario>();\n    const [ultimaConversa, setUltimaConversa] = useState(\"\");\n    const { chatData } = useContext<ContextProvider>(Provider);\n\n    useEffect(() => {\n        const carregandoUsuario = async(usuarioID: number) => {\n            const loadUsuario: Usuario = await getUsuario(usuarioID);\n            setUsuario(loadUsuario);\n        }\n        carregandoUsuario(props.chat.getRemetente());\n    }, []);\n\n\n    useEffect(() => {\n        buscarConversa()\n    }, [chatData])\n    \n    const buscarConversa = async() => {\n        const chat:Chat = await buscarChat(props.chat.getRemetente(), \"myKey\");\n        console.log(chat.getConversas())\n        setUltimaConversa(chat.getConversas()[chat.getConversas().length - 1].getMensagem());\n    }\n\n    return (\n        <Container onPress={() => props.navigation.navigation.navigate(\"ChatScreen\", { chat: props.chat, nome: usuario?.getApelido() })}>\n            <AvatarContainer>\n                <Avatar></Avatar>\n            </AvatarContainer>\n            <UserOutros>\n                <NameHourContainer>\n                    <Nome>@{usuario?.getApelido()}</Nome>\n                    <Hora>{getCurrentDate(props.chat.getTimestamp())}</Hora>\n                </NameHourContainer>\n                <Mensagem numberOfLines={1}>{ultimaConversa}</Mensagem>\n            </UserOutros>\n        </Container>\n    )\n}\n\nconst Container = styled.TouchableOpacity`\n    width: 100%;\n    height: 80px;\n    border-bottom-width: 1px;\n    border-bottom-color: white;\n    flex-direction: row;\n    padding-vertical: 10px;\n    padding-left: 5px;\n`\n\nconst AvatarContainer = styled.View`\n    width: 70px;\n    height: 70px;\n`\n\nconst UserOutros = styled.View`\n    flex: 1;\n`\n\nconst NameHourContainer = styled.View`\n    width: 100%;\n    height: 34px;\n    flex-direction: row;\n    align-itens: center;\n    justify-content: space-between;\n    padding-horizontal: 4px;\n`\n\nconst Nome = styled.Text`\n    color: white;\n    font-size: 14px;\n    font-weight: 500;\n`\n\nconst Hora = styled.Text`\n    color: white;\n    font-size: 11px;\n    font-weight: 500;\n`\n\nconst Mensagem = styled.Text`\n    padding-horizontal: 6px;\n    color: white;\n`\n\nconst Avatar = styled.View`\n    width: 60px;\n    height: 60px;\n    border-radius: 30px;\n    background-color: white;\n`\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}