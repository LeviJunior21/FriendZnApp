{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport * as Google from \"expo-auth-session/providers/google\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nexport default function FazerLogin(props) {\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    accessToken = _useState2[0],\n    setAccessToken = _useState2[1];\n  var _Google$useAuthReques = Google.useAuthRequest({\n      expoClientId: '692576055710-0fv2a6lht7m40ocr76jc8e38ees33tq7.apps.googleusercontent.com',\n      androidClientId: '692576055710-0fv2a6lht7m40ocr76jc8e38ees33tq7.apps.googleusercontent.com',\n      webClientId: '692576055710-0fv2a6lht7m40ocr76jc8e38ees33tq7.apps.googleusercontent.com'\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    promptAsync = _Google$useAuthReques2[2];\n  useEffect(function () {\n    var getUserData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var useInfoResponse = yield fetch(\"https://www.googleapis.com/userinfo/v2/me\", {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        useInfoResponse.json().then(function (data) {\n          props.setUserInfo(data);\n        });\n      });\n      return function getUserData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    if (accessToken) {\n      getUserData();\n    }\n  }, [accessToken]);\n  useEffect(function () {\n    if ((response == null ? void 0 : response.type) == \"success\" && response.authentication) {\n      setAccessToken(response.authentication.accessToken);\n    }\n  }, [response]);\n  return _jsx(Header, {\n    children: _jsxs(TouchLogin, {\n      onPress: function onPress() {\n        return promptAsync();\n      },\n      children: [_jsx(Icon, {\n        name: \"logo-google\",\n        size: 30,\n        color: \"white\"\n      }), _jsx(TextLogin, {\n        children: \"Fazer login com a Google\"\n      })]\n    })\n  });\n}\nvar height = Dimensions.get(\"window\").height;\nvar TouchLogin = styled.TouchableOpacity`\n    width: 70%;\n    height: 60px;\n    border-radius: 8px;\n    background-color: red;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n    border-width: 2px;\n    border-color: white;\n`;\nvar TextLogin = styled.Text`\n    color: white;\n    font-size: 18px;\n    font-weight: 500;\n`;\nvar Header = styled.View`\n    width: 100%;\n    height: ${height - 50}px;\n    padding: 10px;\n    justify-content: center;\n    align-items: center;\n`;","map":{"version":3,"names":["React","useEffect","useState","styled","Icon","Google","WebBrowser","Dimensions","jsx","_jsx","jsxs","_jsxs","maybeCompleteAuthSession","FazerLogin","props","_useState","undefined","_useState2","_slicedToArray","accessToken","setAccessToken","_Google$useAuthReques","useAuthRequest","expoClientId","androidClientId","webClientId","_Google$useAuthReques2","request","response","promptAsync","getUserData","_ref","_asyncToGenerator","useInfoResponse","fetch","headers","Authorization","json","then","data","setUserInfo","apply","arguments","type","authentication","Header","children","TouchLogin","onPress","name","size","color","TextLogin","height","get","TouchableOpacity","Text","View"],"sources":["/home/marcos_anderson/MeusProjetos/FriedZone/friendzoneapp/components/login/fazerLogin.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport * as Google from \"expo-auth-session/providers/google\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { UserInfoProps } from '../../utils/interfaces';\nimport { Dimensions } from 'react-native';\n\nWebBrowser.maybeCompleteAuthSession();\nexport default function FazerLogin(props: UserInfoProps) {\n    const [accessToken, setAccessToken] = useState<string | undefined>(undefined);\n    const [request, response, promptAsync] = Google.useAuthRequest({\n        expoClientId: '692576055710-0fv2a6lht7m40ocr76jc8e38ees33tq7.apps.googleusercontent.com',\n        androidClientId: '692576055710-0fv2a6lht7m40ocr76jc8e38ees33tq7.apps.googleusercontent.com',\n        webClientId: '692576055710-0fv2a6lht7m40ocr76jc8e38ees33tq7.apps.googleusercontent.com',\n    });\n\n    useEffect(() => {\n        const getUserData = async() => {\n            let useInfoResponse = await fetch(\"https://www.googleapis.com/userinfo/v2/me\", {\n                headers: {Authorization: `Bearer ${accessToken}`}\n            });\n            useInfoResponse.json().then(data => {\n                props.setUserInfo(data);\n            });\n        }\n        if (accessToken) {\n            getUserData();\n        }\n    }, [accessToken]);\n\n    useEffect(() => {\n        if (response?.type == \"success\" && response.authentication) {\n            setAccessToken(response.authentication.accessToken);\n        }\n    }, [response]);\n\n    return (\n        <Header>\n            <TouchLogin onPress={() => promptAsync()}>\n                <Icon name={\"logo-google\"} size={30} color={\"white\"} />\n                <TextLogin>Fazer login com a Google</TextLogin>\n            </TouchLogin>\n        </Header>\n    );\n}\n\nconst height = Dimensions.get(\"window\").height;\nconst TouchLogin = styled.TouchableOpacity`\n    width: 70%;\n    height: 60px;\n    border-radius: 8px;\n    background-color: red;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n    border-width: 2px;\n    border-color: white;\n`\n\nconst TextLogin = styled.Text`\n    color: white;\n    font-size: 18px;\n    font-weight: 500;\n`\n\nconst Header = styled.View`\n    width: 100%;\n    height: ${height - 50}px;\n    padding: 10px;\n    justify-content: center;\n    align-items: center;\n`\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}