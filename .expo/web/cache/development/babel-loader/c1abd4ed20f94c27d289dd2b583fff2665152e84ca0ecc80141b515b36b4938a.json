{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport styled from \"styled-components/native\";\nimport { deleteChat } from \"../../data/utils\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useState } from \"react\";\nimport Constants from \"expo-constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Nav() {\n  return _jsx(Container, {\n    children: _jsx(ButtonDrawer, {\n      children: _jsx(Icon, {\n        name: \"menu-outline\",\n        size: 30,\n        color: \"white\"\n      })\n    })\n  });\n}\nexport function NavChat(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var deleteAndGoBack = function () {\n    var _ref = _asyncToGenerator(function* (id) {\n      yield deleteChat(id, \"myKey\");\n      setModalVisible(false);\n      props.navigation.goBack();\n    });\n    return function deleteAndGoBack(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var mostrarModal = function mostrarModal() {\n    setModalVisible(!modalVisible);\n  };\n  return _jsxs(NavChatContainer, {\n    children: [_jsx(ButtonBack, {\n      onPress: function onPress() {\n        return props.navigation.goBack();\n      },\n      children: _jsx(Icon, {\n        name: \"arrow-back\",\n        color: \"white\",\n        size: 30\n      })\n    }), _jsxs(AvatarContainer, {\n      children: [_jsx(Avatar, {}), _jsxs(Nome, {\n        numberOfLines: 1,\n        children: [\"@\", props.nome]\n      })]\n    }), _jsx(Options, {\n      onPress: function onPress() {\n        return mostrarModal();\n      },\n      children: _jsx(Icon, {\n        name: \"ellipsis-vertical\",\n        color: \"white\",\n        size: 24\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      children: _jsxs(ModalContainer, {\n        children: [_jsxs(ModalView, {\n          children: [_jsx(ModalEscolha, {\n            onPress: function onPress() {\n              return deleteAndGoBack(props.idRemetente);\n            },\n            children: _jsx(FecharModalText, {\n              children: \"Apagar Chat\"\n            })\n          }), _jsx(ModalEscolha, {\n            children: _jsx(FecharModalText, {\n              children: \"Denunciar\"\n            })\n          })]\n        }), _jsx(FecharModal, {\n          onPress: function onPress() {\n            return mostrarModal();\n          },\n          children: _jsx(FecharModalText, {\n            children: \"Fechar\"\n          })\n        })]\n      })\n    })]\n  });\n}\nvar height = Dimensions.get('window').height;\nvar Container = styled.View`\n    width: 100%;\n    height: 50px;\n    align-items: center;\n    flex-direction: row;\n    background-color: #10a17d;\n`;\nvar ButtonDrawer = styled.TouchableOpacity`\n    width: 50px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n`;\nvar NavChatContainer = styled.View`\n    width: 100%;\n    height: 60px;\n    align-items: center;\n    flex-direction: row;\n    background-color: #10a17d;\n`;\nvar ButtonBack = styled.TouchableOpacity`\n    width: 50px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n`;\nvar AvatarContainer = styled.View`\n    height: 100%;\n    flex-direction: row;\n    align-items: center;\n`;\nvar Avatar = styled.View`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background-color: white;\n`;\nvar Nome = styled.Text`\n    color: white;\n    font-size: 18px;\n    font-weight: 500;\n    margin-left: 10px;\n`;\nvar Options = styled.TouchableOpacity`\n    widht: 40px;\n    height: 40px;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    right: 10px;\n`;\nvar ModalContainer = styled.View`\n    margin-top: ${height / 2 - Constants.statusBarHeight - 100}px;\n    width: 200px;\n    height: 200px;\n    border-radius: 10px;\n    background-color: white;\n    align-self: center;\n    border-width: 2px;\n    border-color: black;\n`;\nvar FecharModal = styled.TouchableOpacity`\n    width: 80%;\n    height: 36px;\n    border-radius: 10px;\n    background-color: blue;\n    align-self: center;\n    position: absolute;\n    bottom: 10px;\n    justify-content: center;\n    align-items: center;\n`;\nvar FecharModalText = styled.Text`\n    color: white;\n    font-size: 14px;\n    font-weight: 500;\n`;\nvar ModalView = styled.View`\n    margin-top: 20px;\n    width: 80%;\n    height: 124px;\n    align-self: center;\n    flex-direction: column;\n    justify-content: space-evenly;\n`;\nvar ModalEscolha = styled.TouchableOpacity`\n    width: 100%;\n    height: 40px;\n    border-radius: 4px;\n    background-color: blue;\n    justify-content: center;\n    align-items: center;\n`;","map":{"version":3,"names":["Icon","styled","deleteChat","Dimensions","Modal","useState","Constants","jsx","_jsx","jsxs","_jsxs","Nav","Container","children","ButtonDrawer","name","size","color","NavChat","props","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","deleteAndGoBack","_ref","_asyncToGenerator","id","navigation","goBack","_x","apply","arguments","mostrarModal","NavChatContainer","ButtonBack","onPress","AvatarContainer","Avatar","Nome","numberOfLines","nome","Options","animationType","transparent","visible","ModalContainer","ModalView","ModalEscolha","idRemetente","FecharModalText","FecharModal","height","get","View","TouchableOpacity","Text","statusBarHeight"],"sources":["/home/marcos_anderson/MeusProjetos/FriedZone/friendzoneapp/components/chat/nav.tsx"],"sourcesContent":["import Icon from \"react-native-vector-icons/Ionicons\"\nimport styled from \"styled-components/native\"\nimport { RootStackParamList } from \"../../utils/interfaces\"\nimport { NavigationProp } from \"@react-navigation/native\";\nimport { deleteChat } from \"../../data/utils\";\nimport { Dimensions, Modal } from \"react-native\";\nimport { useState } from \"react\";\nimport Constants from \"expo-constants\";\nexport default function Nav() {\n    return (\n        <Container>\n            <ButtonDrawer>\n                <Icon name={\"menu-outline\"} size={30} color={\"white\"}></Icon>\n            </ButtonDrawer>\n        </Container>\n    )\n}\n\ninterface Props{\n    navigation: NavigationProp<RootStackParamList, \"Home\">;\n    nome: string;\n    idRemetente: number;\n}\nexport function NavChat(props: Props) {\n    const [modalVisible, setModalVisible] = useState<boolean>(false);\n\n    const deleteAndGoBack = async(id: number) => {\n        await deleteChat(id, \"myKey\");\n        setModalVisible(false);\n        props.navigation.goBack();\n    }\n\n    const mostrarModal = () => {\n        setModalVisible(!modalVisible)\n    }\n\n    return (\n        <NavChatContainer>\n            <ButtonBack onPress={() => props.navigation.goBack()}>\n                <Icon name={\"arrow-back\"} color={\"white\"} size={30}/>\n            </ButtonBack>\n            <AvatarContainer>\n                <Avatar></Avatar>\n                <Nome numberOfLines={1}>@{props.nome}</Nome>\n            </AvatarContainer>\n            <Options onPress={() => mostrarModal()}>\n                <Icon name={\"ellipsis-vertical\"} color={\"white\"} size={24}/>\n            </Options>\n            <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={modalVisible}\n            >\n                <ModalContainer>\n                    <ModalView>\n                        <ModalEscolha onPress={() => deleteAndGoBack(props.idRemetente)}>\n                            <FecharModalText>{\"Apagar Chat\"}</FecharModalText>\n                        </ModalEscolha>\n                        <ModalEscolha>\n                            <FecharModalText>{\"Denunciar\"}</FecharModalText>\n                        </ModalEscolha>\n                    </ModalView>\n                    <FecharModal onPress={() => mostrarModal()}>\n                        <FecharModalText>{\"Fechar\"}</FecharModalText>\n                    </FecharModal>\n                </ModalContainer>\n            </Modal>\n        </NavChatContainer>\n    )\n}\n\nconst height = Dimensions.get('window').height;\nconst Container = styled.View`\n    width: 100%;\n    height: 50px;\n    align-items: center;\n    flex-direction: row;\n    background-color: #10a17d;\n`\n\nconst ButtonDrawer = styled.TouchableOpacity`\n    width: 50px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n`\n\nconst NavChatContainer = styled.View`\n    width: 100%;\n    height: 60px;\n    align-items: center;\n    flex-direction: row;\n    background-color: #10a17d;\n`\n\nconst ButtonBack = styled.TouchableOpacity`\n    width: 50px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n`\n\nconst AvatarContainer = styled.View`\n    height: 100%;\n    flex-direction: row;\n    align-items: center;\n`\n\nconst Avatar = styled.View`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background-color: white;\n`\n\nconst Nome = styled.Text`\n    color: white;\n    font-size: 18px;\n    font-weight: 500;\n    margin-left: 10px;\n`\n\nconst Options = styled.TouchableOpacity`\n    widht: 40px;\n    height: 40px;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    right: 10px;\n`\n\nconst ModalContainer = styled.View`\n    margin-top: ${height/2 - Constants.statusBarHeight - 100}px;\n    width: 200px;\n    height: 200px;\n    border-radius: 10px;\n    background-color: white;\n    align-self: center;\n    border-width: 2px;\n    border-color: black;\n`\n\nconst FecharModal = styled.TouchableOpacity`\n    width: 80%;\n    height: 36px;\n    border-radius: 10px;\n    background-color: blue;\n    align-self: center;\n    position: absolute;\n    bottom: 10px;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FecharModalText = styled.Text`\n    color: white;\n    font-size: 14px;\n    font-weight: 500;\n`\n\nconst ModalView = styled.View`\n    margin-top: 20px;\n    width: 80%;\n    height: 124px;\n    align-self: center;\n    flex-direction: column;\n    justify-content: space-evenly;\n`\n\nconst ModalEscolha = styled.TouchableOpacity`\n    width: 100%;\n    height: 40px;\n    border-radius: 4px;\n    background-color: blue;\n    justify-content: center;\n    align-items: center;\n`"],"mappings":"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X,MAAM,CAACsD,IAAK;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMzC,YAAY,GAAGb,MAAM,CAACuD,gBAAiB;AAC7C;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMrB,gBAAgB,GAAGlC,MAAM,CAACsD,IAAK;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMnB,UAAU,GAAGnC,MAAM,CAACuD,gBAAiB;AAC3C;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMlB,eAAe,GAAGrC,MAAM,CAACsD,IAAK;AACpC;AACA;AACA;AACA,CAAC;AAED,IAAMhB,MAAM,GAAGtC,MAAM,CAACsD,IAAK;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMf,IAAI,GAAGvC,MAAM,CAACwD,IAAK;AACzB;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMd,OAAO,GAAG1C,MAAM,CAACuD,gBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMT,cAAc,GAAG9C,MAAM,CAACsD,IAAK;AACnC,kBAAkBF,MAAM,GAAC,CAAC,GAAG/C,SAAS,CAACoD,eAAe,GAAG,GAAI;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMN,WAAW,GAAGnD,MAAM,CAACuD,gBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,IAAML,eAAe,GAAGlD,MAAM,CAACwD,IAAK;AACpC;AACA;AACA;AACA,CAAC;AAED,IAAMT,SAAS,GAAG/C,MAAM,CAACsD,IAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMN,YAAY,GAAGhD,MAAM,CAACuD,gBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}