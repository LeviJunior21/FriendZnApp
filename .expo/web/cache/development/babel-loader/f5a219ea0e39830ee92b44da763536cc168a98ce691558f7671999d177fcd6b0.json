{"ast":null,"code":"function formatTimeDifference(differenceInMilliseconds) {\n  var segundos = Math.floor(differenceInMilliseconds / 1000);\n  var minutos = Math.floor(segundos / 60);\n  var horas = Math.floor(minutos / 60);\n  var dias = Math.floor(horas / 24);\n  var semanas = Math.floor(dias / 7);\n  if (semanas >= 2) {\n    return `${semanas} semanas atrás`;\n  } else if (semanas === 1) {\n    return '1 semana atrás';\n  } else if (dias >= 2) {\n    return `${dias} dias atrás`;\n  } else if (dias === 1) {\n    return '1 dia atrás';\n  } else if (horas >= 2) {\n    return `${horas} horas atrás`;\n  } else if (horas === 1) {\n    return '1 hora atrás';\n  } else if (minutos >= 2) {\n    return `${minutos} minutos atrás`;\n  } else if (minutos === 1) {\n    return '1 minuto atrás';\n  } else {\n    return 'agora há pouco';\n  }\n}\n;\nexport function getCurrentDate(date) {\n  var currentTime = new Date();\n  var differenceByTime = currentTime.getTime() - date.getTime();\n  return formatTimeDifference(differenceByTime);\n}","map":{"version":3,"names":["formatTimeDifference","differenceInMilliseconds","segundos","Math","floor","minutos","horas","dias","semanas","getCurrentDate","date","currentTime","Date","differenceByTime","getTime"],"sources":["/home/marcos_anderson/MeusProjetos/FriedZone/friendzoneapp/utils/time.tsx"],"sourcesContent":["function formatTimeDifference(differenceInMilliseconds: number): string {\n    const segundos = Math.floor(differenceInMilliseconds / 1000);\n    const minutos = Math.floor(segundos / 60);\n    const horas = Math.floor(minutos / 60);\n    const dias = Math.floor(horas / 24);\n    const semanas = Math.floor(dias / 7);\n  \n    if (semanas >= 2) {\n      return `${semanas} semanas atrás`;\n    } else if (semanas === 1) {\n      return '1 semana atrás';\n    } else if (dias >= 2) {\n      return `${dias} dias atrás`;\n    } else if (dias === 1) {\n      return '1 dia atrás';\n    } else if (horas >= 2) {\n      return `${horas} horas atrás`;\n    } else if (horas === 1) {\n      return '1 hora atrás';\n    } else if (minutos >= 2) {\n      return `${minutos} minutos atrás`;\n    } else if (minutos === 1) {\n      return '1 minuto atrás';\n    } else {\n      return 'agora há pouco';\n    }\n};\n\nexport function getCurrentDate(date: Date): string {\n    const currentTime = new Date();\n    const differenceByTime = currentTime.getTime() - date.getTime();\n    return formatTimeDifference(differenceByTime);\n}"],"mappings":"AAAA,SAASA,oBAAoBA,CAACC,wBAAgC,EAAU;EACpE,IAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,wBAAwB,GAAG,IAAI,CAAC;EAC5D,IAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACF,QAAQ,GAAG,EAAE,CAAC;EACzC,IAAMI,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE,CAAC;EACtC,IAAME,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,EAAE,CAAC;EACnC,IAAME,OAAO,GAAGL,IAAI,CAACC,KAAK,CAACG,IAAI,GAAG,CAAC,CAAC;EAEpC,IAAIC,OAAO,IAAI,CAAC,EAAE;IAChB,OAAQ,GAAEA,OAAQ,gBAAe;EACnC,CAAC,MAAM,IAAIA,OAAO,KAAK,CAAC,EAAE;IACxB,OAAO,gBAAgB;EACzB,CAAC,MAAM,IAAID,IAAI,IAAI,CAAC,EAAE;IACpB,OAAQ,GAAEA,IAAK,aAAY;EAC7B,CAAC,MAAM,IAAIA,IAAI,KAAK,CAAC,EAAE;IACrB,OAAO,aAAa;EACtB,CAAC,MAAM,IAAID,KAAK,IAAI,CAAC,EAAE;IACrB,OAAQ,GAAEA,KAAM,cAAa;EAC/B,CAAC,MAAM,IAAIA,KAAK,KAAK,CAAC,EAAE;IACtB,OAAO,cAAc;EACvB,CAAC,MAAM,IAAID,OAAO,IAAI,CAAC,EAAE;IACvB,OAAQ,GAAEA,OAAQ,gBAAe;EACnC,CAAC,MAAM,IAAIA,OAAO,KAAK,CAAC,EAAE;IACxB,OAAO,gBAAgB;EACzB,CAAC,MAAM;IACL,OAAO,gBAAgB;EACzB;AACJ;AAAC;AAED,OAAO,SAASI,cAAcA,CAACC,IAAU,EAAU;EAC/C,IAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC9B,IAAMC,gBAAgB,GAAGF,WAAW,CAACG,OAAO,CAAC,CAAC,GAAGJ,IAAI,CAACI,OAAO,CAAC,CAAC;EAC/D,OAAOd,oBAAoB,CAACa,gBAAgB,CAAC;AACjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}