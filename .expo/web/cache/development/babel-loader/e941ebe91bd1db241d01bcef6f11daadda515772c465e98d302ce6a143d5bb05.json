{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Chat, chatBuilder } from \"../model/Chat\";\nexport var gravarConversa = function () {\n  var _ref = _asyncToGenerator(function* (newConversa, key) {\n    var chats = yield lerChats(key);\n    try {\n      var index = chats.findIndex(function (chat) {\n        return chat.getRemetente() === newConversa.getRemetente();\n      });\n      if (index !== -1) {\n        chats[index].setConversas([].concat(_toConsumableArray(chats[index].getConversas()), [newConversa]));\n      } else {\n        var dadosNecessarios = {\n          conversas: [newConversa],\n          remetente: newConversa.getRemetente(),\n          timestamp: newConversa.getTimestamp()\n        };\n        var newChat = chatBuilder(dadosNecessarios);\n        chats.push(newChat);\n      }\n      var chatJSONString = JSON.stringify(chats);\n      AsyncStorage.setItem(key, chatJSONString);\n      return chats;\n    } catch (e) {\n      return chats;\n    }\n  });\n  return function gravarConversa(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var lerConversaDoChat = function () {\n  var _ref2 = _asyncToGenerator(function* (remetente, key) {\n    var chat = yield buscarChat(remetente, key);\n    return chat.getConversas();\n  });\n  return function lerConversaDoChat(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var lerChats = function () {\n  var _ref3 = _asyncToGenerator(function* (key) {\n    try {\n      var recoveryChat = yield AsyncStorage.getItem(key);\n      if (recoveryChat != null) {\n        var recoveredChat = JSON.parse(recoveryChat);\n        var todosChats = recoveredChat.map(function (item) {\n          return chatBuilder(item);\n        });\n        return todosChats;\n      }\n    } catch (e) {}\n    return [];\n  });\n  return function lerChats(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var gravarChat = function () {\n  var _ref4 = _asyncToGenerator(function* (newChat, key) {\n    var chats = yield lerChats(key);\n    var newChats = [].concat(_toConsumableArray(chats), [newChat]);\n    var conversasJSONString = JSON.stringify(newChats);\n    AsyncStorage.setItem(key, conversasJSONString);\n  });\n  return function gravarChat(_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var buscarChat = function () {\n  var _ref5 = _asyncToGenerator(function* (idRemetente, key) {\n    var chats = yield lerChats(key);\n    var index = chats.findIndex(function (chat) {\n      return chat.getRemetente() === idRemetente;\n    });\n    if (index !== -1) {\n      return chats[index];\n    }\n    return Chat.builder().build();\n  });\n  return function buscarChat(_x8, _x9) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var deleteChat = function () {\n  var _ref6 = _asyncToGenerator(function* (idRemetente, key) {\n    var chats = yield lerChats(key);\n    var index = chats.findIndex(function (chat) {\n      return chat.getRemetente() === idRemetente;\n    });\n    if (index !== -1) {\n      chats.splice(index, 1);\n      AsyncStorage.setItem(key, JSON.stringify(chats));\n    }\n  });\n  return function deleteChat(_x10, _x11) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["AsyncStorage","Chat","chatBuilder","gravarConversa","_ref","_asyncToGenerator","newConversa","key","chats","lerChats","index","findIndex","chat","getRemetente","setConversas","concat","_toConsumableArray","getConversas","dadosNecessarios","conversas","remetente","timestamp","getTimestamp","newChat","push","chatJSONString","JSON","stringify","setItem","e","_x","_x2","apply","arguments","lerConversaDoChat","_ref2","buscarChat","_x3","_x4","_ref3","recoveryChat","getItem","recoveredChat","parse","todosChats","map","item","_x5","gravarChat","_ref4","newChats","conversasJSONString","_x6","_x7","_ref5","idRemetente","builder","build","_x8","_x9","deleteChat","_ref6","splice","_x10","_x11"],"sources":["/home/marcos_anderson/MeusProjetos/FriedZone/friendzoneapp/data/utils.tsx"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Chat, chatBuilder } from \"../model/Chat\";\nimport { Conversa } from \"../model/Conversa\";\n\n/**\n* @param {Conversa} newConversa - Conversa a ser gravada.\n* @param {string} key - Chave do banco AsyncStorage.\n* @returns {Promise<Chat[]>} - Uma Promis que resolve para um array de objetos Chat.\n**/\nexport const gravarConversa = async(newConversa: Conversa, key: string):Promise<Chat[]> => {\n    const chats:Chat[] = await lerChats(key);\n    try {\n        const index = chats.findIndex((chat:Chat) => chat.getRemetente() === newConversa.getRemetente());\n        if (index !== -1) {\n            chats[index].setConversas([...chats[index].getConversas(), newConversa]);\n        } else {\n            const dadosNecessarios = {\n                conversas: [newConversa], \n                remetente: newConversa.getRemetente(), \n                timestamp: newConversa.getTimestamp()\n            };\n            const newChat:Chat = chatBuilder(dadosNecessarios);\n            chats.push(newChat);\n        }\n        const chatJSONString = JSON.stringify(chats);\n        AsyncStorage.setItem(key, chatJSONString);\n        return chats;\n    }\n    catch(e) {\n        return chats;\n    }\n}\n\n/**\n* @param {number} remetente - id do remetente.\n* @param {string} key - Chave do banco AsyncStorage.\n* @return {Promise<Conversa[]>} - Uma Promise que resolve para um array de objetos Comentario.\n**/\nexport const lerConversaDoChat = async(remetente: number, key: string): Promise<Conversa[]> => {\n    const chat:Chat = await buscarChat(remetente, key);\n    return chat.getConversas();\n}\n\n/**\n* @param {string} key - Chave do banco AsyncStorage.\n* @return {Promise<Chat[]>} - Uma Promise que resolve para um array de objetos Chat.\n**/\nexport const lerChats = async(key: string): Promise<Chat[]> => {\n    try {\n        const recoveryChat = await AsyncStorage.getItem(key);\n        if (recoveryChat != null) {\n            const recoveredChat = JSON.parse(recoveryChat);\n            const todosChats:Chat[] = recoveredChat.map((item:any) => { return chatBuilder(item) })\n            return todosChats;\n        }\n    } catch(e) {}\n    return [];\n}\n\n/**\n@param {Chat} newChat - Novo chat.\n@param {string} key - Chave do banco AsyncStorage.\n**/\nexport const gravarChat = async(newChat:Chat, key: string) => {\n    const chats = await lerChats(key);\n    const newChats = [...chats, newChat];\n    const conversasJSONString = JSON.stringify(newChats);\n    AsyncStorage.setItem(key, conversasJSONString);\n}\n\n/**\n@param {number} idRemetente - Novo chat.\n@param {string} key - Chave do banco AsyncStorage.\n@returns {Promise<Chat>} - Uma Promise que resolve para um Chat encontrado.\n**/\nexport const buscarChat = async(idRemetente: number, key: string): Promise<Chat> => {\n    const chats:Chat[] = await lerChats(key);\n    const index:number = chats.findIndex((chat:Chat) => chat.getRemetente() === idRemetente);\n    if (index !== -1) { return chats[index] }\n    return Chat.builder().build();\n}\n\n/**\n@param {number} idRemetente - Novo chat.\n@param {string} key - Chave do banco AsyncStorage.\n**/\nexport const deleteChat = async(idRemetente: number, key: string) => {\n    const chats:Chat[] = await lerChats(key);\n    const index:number = chats.findIndex(chat => chat.getRemetente() === idRemetente);\n    if (index !== -1) {\n        chats.splice(index, 1);\n        AsyncStorage.setItem(key, JSON.stringify(chats));\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}