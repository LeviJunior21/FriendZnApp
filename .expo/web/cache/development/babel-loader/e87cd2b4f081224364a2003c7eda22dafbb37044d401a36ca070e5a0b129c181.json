{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport styled from \"styled-components/native\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Constants from 'expo-constants';\nimport { Nav } from \"./nav\";\nimport { useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { data } from \"../homeInicial/nav/categories\";\nimport { Categoria } from \"../../utils/interfaces\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Postar(navigation) {\n  var _useState = useState(\"Selecione uma categoria...\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    categoria = _useState2[0],\n    setCategoria = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    mostrarCategoria = _useState4[0],\n    setMostrarCategoria = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    desabafo = _useState6[0],\n    setDesabafo = _useState6[1];\n  var _useState7 = useState(Categoria.selecionar),\n    _useState8 = _slicedToArray(_useState7, 2),\n    enumCategoria = _useState8[0],\n    setEnumCatgegotia = _useState8[1];\n  var handleCategoria = function handleCategoria(tituloCategoria, enumCategoria) {\n    setCategoria(tituloCategoria);\n    setMostrarCategoria(!mostrarCategoria);\n    setEnumCatgegotia(enumCategoria);\n  };\n  return _jsxs(Container, {\n    children: [_jsx(Nav, {\n      navigation: navigation,\n      categoria: enumCategoria,\n      desabafo: desabafo\n    }), _jsxs(SelectCategoty, {\n      onPress: function onPress() {\n        return setMostrarCategoria(!mostrarCategoria);\n      },\n      children: [_jsx(Categorias, {\n        children: categoria\n      }), _jsx(Icon, {\n        name: \"chevron-down\",\n        size: 20,\n        color: \"white\"\n      })]\n    }), _jsx(ScrollView, {\n      children: _jsx(Desabafo, {\n        placeholder: \"Desabafe...\",\n        placeholderTextColor: \"gray\",\n        cursorColor: \"white\",\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          return setDesabafo(text);\n        }\n      })\n    }), _jsx(ModalContainer, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: mostrarCategoria,\n      children: _jsxs(ModalContent, {\n        children: [_jsx(TextChoice, {\n          children: \"Selecione uma categoria...\"\n        }), _jsx(FlatList, {\n          data: data.slice(1),\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item,\n              index = _ref.index;\n            return _jsx(CategoriaButton, {\n              onPress: function onPress() {\n                return handleCategoria(item.titulo, item.categoria);\n              },\n              children: _jsxs(ButtonContainer, {\n                children: [_jsx(RoundImage, {\n                  source: item.image\n                }), _jsx(CategoriaText, {\n                  children: item.titulo\n                })]\n              })\n            });\n          }\n        })]\n      })\n    })]\n  });\n}\nvar width = Dimensions.get('window').width;\nvar Container = styled.View`\n    background-color: #303030;\n    width: 100%;\n    height: 100%;\n    margin-top: ${Constants.statusBarHeight}px;\n`;\nvar SelectCategoty = styled.TouchableOpacity`\n    width: 100%;\n    height: 50px;\n    border-bottom-width: 1px;\n    border-bottom-color: white;\n    flex-direction: row;\n    align-items: center;\n    padding-horizontal: 14px;\n    justify-content: space-between;\n`;\nvar Categorias = styled.Text`\n    color: white;\n    font-weight: 500;\n    font-size: 16px;\n`;\nvar Desabafo = styled.TextInput`\n    width: 100%;\n    font-size: 18px;\n    padding: 10px;\n    color: white;\n`;\nvar ModalContainer = styled.Modal`\n`;\nvar ModalContent = styled.View`\n    position: absolute;\n    top: 110px;\n    width: 80%;\n    height: 80%;\n    background-color: gray;\n    position: absolute;\n    border-radius: 10px;\n    left: ${0.1 * width}px;\n    padding: 10px;\n`;\nvar CategoriaButton = styled.TouchableOpacity`\n    height: 50px;\n    flex-direction: column;\n    justify-content: center;\n    padding-horizontal: 6px;\n`;\nvar CategoriaText = styled.Text`\n    color: white;\n    margin-left: 10px;\n`;\nvar RoundImage = styled.Image`\n    width: 42px;\n    height: 42px;\n    border-radius: 21px;\n    background-color: white;\n`;\nvar ButtonContainer = styled.View`\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n`;\nvar TextChoice = styled.Text`\n    padding: 10px;\n    color: white;\n    font-size: 18px;\n    font-weight: bold;\n`;","map":{"version":3,"names":["styled","Icon","Constants","Nav","useState","Dimensions","FlatList","ScrollView","data","Categoria","jsx","_jsx","jsxs","_jsxs","Postar","navigation","_useState","_useState2","_slicedToArray","categoria","setCategoria","_useState3","_useState4","mostrarCategoria","setMostrarCategoria","_useState5","_useState6","desabafo","setDesabafo","_useState7","selecionar","_useState8","enumCategoria","setEnumCatgegotia","handleCategoria","tituloCategoria","Container","children","SelectCategoty","onPress","Categorias","name","size","color","Desabafo","placeholder","placeholderTextColor","cursorColor","multiline","onChangeText","text","ModalContainer","animationType","transparent","visible","ModalContent","TextChoice","slice","renderItem","_ref","item","index","CategoriaButton","titulo","ButtonContainer","RoundImage","source","image","CategoriaText","width","get","View","statusBarHeight","TouchableOpacity","Text","TextInput","Modal","Image"],"sources":["/home/marcos_anderson/MeusProjetos/FriedZone/friendzoneapp/components/postar/index.tsx"],"sourcesContent":["import styled from \"styled-components/native\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport Constants from 'expo-constants';\nimport { Nav } from \"./nav\"\nimport { useState } from \"react\"\nimport { Dimensions, FlatList, ScrollView } from \"react-native\";\nimport { data } from \"../homeInicial/nav/categories\";\nimport { Categoria, Navigation } from \"../../utils/interfaces\";\n\nexport default function Postar(navigation: Navigation) {\n    const [categoria, setCategoria] = useState<string>(\"Selecione uma categoria...\");\n    const [mostrarCategoria, setMostrarCategoria] = useState<boolean>(true);\n    const [desabafo, setDesabafo] = useState<string>(\"\");\n    const [enumCategoria, setEnumCatgegotia] = useState<Categoria>(Categoria.selecionar)\n\n    const handleCategoria = (tituloCategoria: string, enumCategoria: Categoria) => {\n        setCategoria(tituloCategoria);\n        setMostrarCategoria(!mostrarCategoria);\n        setEnumCatgegotia(enumCategoria);\n    }\n\n    return (\n        <Container>\n            <Nav navigation={navigation} categoria={enumCategoria} desabafo={desabafo}></Nav>\n            <SelectCategoty onPress={() => setMostrarCategoria(!mostrarCategoria)}>\n                <Categorias\n                >{categoria}\n                </Categorias>\n                <Icon name={\"chevron-down\"} size={20} color={\"white\"}/>\n            </SelectCategoty>\n            <ScrollView>\n                <Desabafo\n                    placeholder={\"Desabafe...\"}\n                    placeholderTextColor={\"gray\"}\n                    cursorColor={\"white\"}\n                    multiline={true}\n                    onChangeText={(text) => setDesabafo(text)}\n                />\n            </ScrollView>\n            <ModalContainer\n                animationType=\"slide\"\n                transparent={true}\n                visible={mostrarCategoria}\n                \n            >\n                <ModalContent>\n                    <TextChoice>{\"Selecione uma categoria...\"}</TextChoice>\n                    <FlatList\n                        data={data.slice(1)}\n                        renderItem={({item, index}) => \n                            <CategoriaButton onPress={() => handleCategoria(item.titulo, item.categoria)}>\n                                <ButtonContainer>\n                                    <RoundImage\n                                    source={item.image}\n                                    ></RoundImage>\n                                    <CategoriaText>{item.titulo}</CategoriaText>\n                                </ButtonContainer>\n                            </CategoriaButton>\n                        }\n                    />\n                </ModalContent>\n            </ModalContainer>\n        </Container>\n    )\n}\n\nconst width = Dimensions.get('window').width;\nconst Container = styled.View`\n    background-color: #303030;\n    width: 100%;\n    height: 100%;\n    margin-top: ${Constants.statusBarHeight}px;\n`\n\nconst SelectCategoty = styled.TouchableOpacity`\n    width: 100%;\n    height: 50px;\n    border-bottom-width: 1px;\n    border-bottom-color: white;\n    flex-direction: row;\n    align-items: center;\n    padding-horizontal: 14px;\n    justify-content: space-between;\n`\n\nconst Categorias = styled.Text`\n    color: white;\n    font-weight: 500;\n    font-size: 16px;\n`\n\nconst Desabafo = styled.TextInput`\n    width: 100%;\n    font-size: 18px;\n    padding: 10px;\n    color: white;\n`\n\nconst ModalContainer = styled.Modal`\n`\n\nconst ModalContent = styled.View`\n    position: absolute;\n    top: 110px;\n    width: 80%;\n    height: 80%;\n    background-color: gray;\n    position: absolute;\n    border-radius: 10px;\n    left: ${0.1 * width}px;\n    padding: 10px;\n`\n\nconst CategoriaButton = styled.TouchableOpacity`\n    height: 50px;\n    flex-direction: column;\n    justify-content: center;\n    padding-horizontal: 6px;\n`\n\nconst CategoriaText = styled.Text`\n    color: white;\n    margin-left: 10px;\n`\n\nconst RoundImage = styled.Image`\n    width: 42px;\n    height: 42px;\n    border-radius: 21px;\n    background-color: white;\n`\n\nconst ButtonContainer = styled.View`\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n`\n\nconst TextChoice = styled.Text`\n    padding: 10px;\n    color: white;\n    font-size: 18px;\n    font-weight: bold;\n`\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,IAAI;AACX,OAAOC,SAAS,MAAM,gBAAgB;AACtC,SAASC,GAAG;AACZ,SAASC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAEhC,SAASC,IAAI;AACb,SAASC,SAAS;AAA6C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/D,eAAe,SAASC,MAAMA,CAACC,UAAsB,EAAE;EACnD,IAAAC,SAAA,GAAkCZ,QAAQ,CAAS,4BAA4B,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzEG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAgDjB,QAAQ,CAAU,IAAI,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAhEE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAC5C,IAAAG,UAAA,GAAgCrB,QAAQ,CAAS,EAAE,CAAC;IAAAsB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA7CE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA2CzB,QAAQ,CAAYK,SAAS,CAACqB,UAAU,CAAC;IAAAC,UAAA,GAAAb,cAAA,CAAAW,UAAA;IAA7EG,aAAa,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAEvC,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,eAAuB,EAAEH,aAAwB,EAAK;IAC3EZ,YAAY,CAACe,eAAe,CAAC;IAC7BX,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;IACtCU,iBAAiB,CAACD,aAAa,CAAC;EACpC,CAAC;EAED,OACInB,KAAA,CAACuB,SAAS;IAAAC,QAAA,GACN1B,IAAA,CAACR,GAAG;MAACY,UAAU,EAAEA,UAAW;MAACI,SAAS,EAAEa,aAAc;MAACL,QAAQ,EAAEA;IAAS,CAAM,CAAC,EACjFd,KAAA,CAACyB,cAAc;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMf,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;MAAA,CAAC;MAAAc,QAAA,GAClE1B,IAAA,CAAC6B,UAAU;QAAAH,QAAA,EACTlB;MAAS,CACC,CAAC,EACbR,IAAA,CAACV,IAAI;QAACwC,IAAI,EAAE,cAAe;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAE;MAAQ,CAAC,CAAC;IAAA,CAC3C,CAAC,EACjBhC,IAAA,CAACJ,UAAU;MAAA8B,QAAA,EACP1B,IAAA,CAACiC,QAAQ;QACLC,WAAW,EAAE,aAAc;QAC3BC,oBAAoB,EAAE,MAAO;QAC7BC,WAAW,EAAE,OAAQ;QACrBC,SAAS,EAAE,IAAK;QAChBC,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAKtB,WAAW,CAACsB,IAAI,CAAC;QAAA;MAAC,CAC7C;IAAC,CACM,CAAC,EACbvC,IAAA,CAACwC,cAAc;MACXC,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAE/B,gBAAiB;MAAAc,QAAA,EAG1BxB,KAAA,CAAC0C,YAAY;QAAAlB,QAAA,GACT1B,IAAA,CAAC6C,UAAU;UAAAnB,QAAA,EAAE;QAA4B,CAAa,CAAC,EACvD1B,IAAA,CAACL,QAAQ;UACLE,IAAI,EAAEA,IAAI,CAACiD,KAAK,CAAC,CAAC,CAAE;UACpBC,UAAU,EAAE,SAAAA,WAAAC,IAAA;YAAA,IAAEC,IAAI,GAAAD,IAAA,CAAJC,IAAI;cAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;YAAA,OACrBlD,IAAA,CAACmD,eAAe;cAACvB,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAML,eAAe,CAAC0B,IAAI,CAACG,MAAM,EAAEH,IAAI,CAACzC,SAAS,CAAC;cAAA,CAAC;cAAAkB,QAAA,EACzExB,KAAA,CAACmD,eAAe;gBAAA3B,QAAA,GACZ1B,IAAA,CAACsD,UAAU;kBACXC,MAAM,EAAEN,IAAI,CAACO;gBAAM,CACN,CAAC,EACdxD,IAAA,CAACyD,aAAa;kBAAA/B,QAAA,EAAEuB,IAAI,CAACG;gBAAM,CAAgB,CAAC;cAAA,CAC/B;YAAC,CACL,CAAC;UAAA;QACrB,CACJ,CAAC;MAAA,CACQ;IAAC,CACH,CAAC;EAAA,CACV,CAAC;AAEpB;AAEA,IAAMM,KAAK,GAAGhE,UAAU,CAACiE,GAAG,CAAC,QAAQ,CAAC,CAACD,KAAK;AAC5C,IAAMjC,SAAS,GAAGpC,MAAM,CAACuE,IAAK;AAC9B;AACA;AACA;AACA,kBAAkBrE,SAAS,CAACsE,eAAgB;AAC5C,CAAC;AAED,IAAMlC,cAAc,GAAGtC,MAAM,CAACyE,gBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMjC,UAAU,GAAGxC,MAAM,CAAC0E,IAAK;AAC/B;AACA;AACA;AACA,CAAC;AAED,IAAM9B,QAAQ,GAAG5C,MAAM,CAAC2E,SAAU;AAClC;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMxB,cAAc,GAAGnD,MAAM,CAAC4E,KAAM;AACpC,CAAC;AAED,IAAMrB,YAAY,GAAGvD,MAAM,CAACuE,IAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,GAAG,GAAGF,KAAM;AACxB;AACA,CAAC;AAED,IAAMP,eAAe,GAAG9D,MAAM,CAACyE,gBAAiB;AAChD;AACA;AACA;AACA;AACA,CAAC;AAED,IAAML,aAAa,GAAGpE,MAAM,CAAC0E,IAAK;AAClC;AACA;AACA,CAAC;AAED,IAAMT,UAAU,GAAGjE,MAAM,CAAC6E,KAAM;AAChC;AACA;AACA;AACA;AACA,CAAC;AAED,IAAMb,eAAe,GAAGhE,MAAM,CAACuE,IAAK;AACpC;AACA;AACA;AACA,CAAC;AAED,IAAMf,UAAU,GAAGxD,MAAM,CAAC0E,IAAK;AAC/B;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}