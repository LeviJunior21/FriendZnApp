{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport styled from \"styled-components/native\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Animated, { useSharedValue, withTiming } from \"react-native-reanimated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useState } from \"react\";\nimport { getCategory } from \"../../../utils/getCategory\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var Nav = function Nav(_ref) {\n  var categoriaEscolhida = _ref.categoriaEscolhida,\n    search = _ref.search,\n    setSearch = _ref.setSearch,\n    openCategoria = _ref.openCategoria,\n    setOpenCategoria = _ref.setOpenCategoria;\n  var widthShared = useSharedValue(40);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    open = _useState2[0],\n    setOpen = _useState2[1];\n  var handlePress = function handlePress() {\n    var targetWidth = open ? 40 : width - 50;\n    widthShared.value = withTiming(targetWidth, {\n      duration: 300\n    });\n    setOpen(!open);\n  };\n  var handleCategoria = function handleCategoria() {\n    setOpenCategoria(!openCategoria);\n  };\n  return _jsxs(Container, {\n    children: [_jsx(DrawerButton, {\n      children: _jsx(Icon, {\n        name: \"menu-outline\",\n        color: \"white\",\n        size: 30\n      })\n    }), _jsxs(Categoria, {\n      onPress: handleCategoria,\n      children: [_jsx(TextCategoria, {\n        children: getCategory(categoriaEscolhida)\n      }), _jsx(CategoriaAnimatedIcon, {\n        style: {\n          transform: [{\n            rotate: `${openCategoria ? 180 : 0}deg`\n          }]\n        },\n        children: _jsx(Icon, {\n          name: \"chevron-down\",\n          size: 20,\n          color: \"white\"\n        })\n      })]\n    }), _jsx(Notification, {\n      children: _jsx(Icon, {\n        name: \"notifications\",\n        color: \"white\",\n        size: 26\n      })\n    }), _jsx(Search, {\n      style: {\n        width: widthShared\n      },\n      children: _jsxs(StyledAnimatedView, {\n        style: {\n          width: widthShared,\n          borderWidth: open ? 1 : 0,\n          backgroundColor: open ? \"#303030\" : \"transparent\"\n        },\n        children: [open ? _jsx(InputSearch, {\n          value: search,\n          style: {\n            display: open ? \"flex\" : \"none\"\n          },\n          numberOfLines: 1,\n          maxLength: 36,\n          onChangeText: function onChangeText(text) {\n            return setSearch(text);\n          },\n          cursorColor: \"white\",\n          placeholderTextColor: \"white\",\n          onSubmitEditing: handlePress,\n          placeholder: \"Digite aqui\"\n        }) : _jsx(_Fragment, {}), _jsx(IconSearchContainer, {\n          onPress: handlePress,\n          children: _jsx(Icon, {\n            name: open ? \"close\" : \"search\",\n            size: 20,\n            color: open ? \"white\" : \"white\"\n          })\n        })]\n      })\n    })]\n  });\n};\nvar width = Dimensions.get('window').width;\nvar Container = styled.View`\n    width: 100%;\n    height: 50px;\n    flex-direction: row;\n    border-bottom-width: 2px;\n    border-bottom-color: black;\n    background-color: #10a17d;\n    align-items: center;\n    z-index: 3;\n`;\nvar DrawerButton = styled.View`\n    width: 50px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n`;\nvar Search = styled(Animated.View)`\n    height: 50px;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n    position: absolute;\n    right: 6px;\n`;\nvar IconSearchContainer = styled.TouchableOpacity`\n    width: 40px;\n    height: 40px;\n    border-radius: 20px;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n`;\nvar StyledAnimatedView = styled(Animated.View)`\n    height: 40px;\n    border-radius: 20px;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n    color: black;\n`;\nvar InputSearch = styled.TextInput`\n    height: 40px;\n    width: 80%;\n    border-radius: 6px;\n    border-color: black;\n    color: white;\n`;\nvar Categoria = styled.TouchableOpacity`\n    margin-left: 10px;\n    width: 30%;\n    height: 100%;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n`;\nvar TextCategoria = styled.Text`\n    width: 80%;\n    color: white;\n    font-size: 14px;\n    font-weight: bold;\n    flex-wrap: wrap;\n`;\nvar CategoriaAnimatedIcon = styled(Animated.View)`\n\n`;\nvar Notification = styled.TouchableOpacity`\n    position: absolute;\n    right: 70px;\n    width: 30px;\n    height: 30px;\n    border-radius: 15px;\n    justify-content: center;\n    align-items: center;\n`;","map":{"version":3,"names":["styled","Icon","Animated","useSharedValue","withTiming","Dimensions","React","useState","getCategory","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Nav","_ref","categoriaEscolhida","search","setSearch","openCategoria","setOpenCategoria","widthShared","_useState","_useState2","_slicedToArray","open","setOpen","handlePress","targetWidth","width","value","duration","handleCategoria","Container","children","DrawerButton","name","color","size","Categoria","onPress","TextCategoria","CategoriaAnimatedIcon","style","transform","rotate","Notification","Search","StyledAnimatedView","borderWidth","backgroundColor","InputSearch","display","numberOfLines","maxLength","onChangeText","text","cursorColor","placeholderTextColor","onSubmitEditing","placeholder","IconSearchContainer","get","View","TouchableOpacity","TextInput","Text"],"sources":["/home/marcos_anderson/MeusProjetos/FriedZone/friendzoneapp/components/homeInicial/nav/index.tsx"],"sourcesContent":["import styled from \"styled-components/native\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport Animated, { useSharedValue, withTiming } from \"react-native-reanimated\";\nimport { Dimensions } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { NavProps } from \"../../../utils/interfaces\";\nimport { getCategory } from \"../../../utils/getCategory\";\n\nexport const Nav: React.FC<NavProps> = ({ categoriaEscolhida, search, setSearch, openCategoria, setOpenCategoria }) => {\n    const widthShared = useSharedValue(40);\n    const [open, setOpen] = useState(false);\n\n    const handlePress = () => {\n        const targetWidth = open ? 40 : width - 50;\n        widthShared.value = withTiming(targetWidth, { duration: 300 });\n        setOpen(!open);\n    };\n\n    const handleCategoria = () => {\n        setOpenCategoria(!openCategoria);\n    }\n\n    return (\n        <Container>\n            <DrawerButton>\n                <Icon name={\"menu-outline\"} color={\"white\"} size={30}/>\n            </DrawerButton>\n            <Categoria onPress={handleCategoria}>\n                <TextCategoria>{getCategory(categoriaEscolhida)}</TextCategoria>\n                <CategoriaAnimatedIcon style={{transform: [{rotate: `${openCategoria? 180:0}deg`}]}}>\n                    <Icon name={\"chevron-down\"} size={20} color={\"white\"}/>\n                </CategoriaAnimatedIcon>\n            </Categoria>\n            <Notification>\n                <Icon name={\"notifications\"} color={\"white\"} size={26}/>  \n            </Notification>\n            <Search style={{width: widthShared}}>\n                <StyledAnimatedView \n                style={{\n                    width: widthShared, \n                    borderWidth: open? 1:0, \n                    backgroundColor: open? \"#303030\": \"transparent\"\n                }}>\n                    {open?\n                        <InputSearch \n                        value={search}\n                        style={{display: open? \"flex\":\"none\"}} \n                        numberOfLines={1} \n                        maxLength={36}\n                        onChangeText={(text) => setSearch(text)}\n                        cursorColor={\"white\"}\n                        placeholderTextColor={\"white\"}\n                        onSubmitEditing={handlePress}\n                        placeholder={\"Digite aqui\"}/>\n                        :<></>\n                    }\n                    <IconSearchContainer onPress={handlePress}>\n                        <Icon name={open?\"close\":\"search\"} size={20} color={open? \"white\":\"white\"}/>\n                    </IconSearchContainer>\n                </StyledAnimatedView>\n            </Search>\n        </Container>\n    )\n}\n\nconst width = Dimensions.get('window').width;\nconst Container = styled.View`\n    width: 100%;\n    height: 50px;\n    flex-direction: row;\n    border-bottom-width: 2px;\n    border-bottom-color: black;\n    background-color: #10a17d;\n    align-items: center;\n    z-index: 3;\n`\n\nconst DrawerButton = styled.View`\n    width: 50px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Search = styled(Animated.View)`\n    height: 50px;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n    position: absolute;\n    right: 6px;\n`\n\nconst IconSearchContainer = styled.TouchableOpacity`\n    width: 40px;\n    height: 40px;\n    border-radius: 20px;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n`\n\nconst StyledAnimatedView = styled(Animated.View)`\n    height: 40px;\n    border-radius: 20px;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n    color: black;\n`\n\nconst InputSearch = styled.TextInput`\n    height: 40px;\n    width: 80%;\n    border-radius: 6px;\n    border-color: black;\n    color: white;\n`\n\nconst Categoria = styled.TouchableOpacity`\n    margin-left: 10px;\n    width: 30%;\n    height: 100%;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n`\n\nconst TextCategoria = styled.Text`\n    width: 80%;\n    color: white;\n    font-size: 14px;\n    font-weight: bold;\n    flex-wrap: wrap;\n`\n\nconst CategoriaAnimatedIcon = styled(Animated.View)`\n\n`\n\nconst Notification = styled.TouchableOpacity`\n    position: absolute;\n    right: 70px;\n    width: 30px;\n    height: 30px;\n    border-radius: 15px;\n    justify-content: center;\n    align-items: center;\n`\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}